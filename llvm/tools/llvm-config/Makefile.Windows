#
# GNU Makefile for 'llvm/tools/llvm-config'.
#
TOP_DIR = ../../..
TARGETS = $(BUILD_DIR)/bin/llvm-config.exe
MDEPEND = $(THIS_FILE)

include $(TOP_DIR)/Common.Windows

GENERATED += BuildVariables.inc \
             LibraryDependencies.inc

#
# This is rather difficult to generate.
# So just use the one generated by Cmake.
#
# GENERATED += LibraryDependencies.inc

#
# But it could be something like:
#   $(PYTHON) $(TOP_DIR)/utils/llvm-build/llvm-build --source-root=$(realpath $(TOP_DIR)) --write-library-table=LibraryDependencies.inc
#

ALL_SOURCES = llvm-config.cpp
OBJECTS     = $(call cpp_to_obj, $(ALL_SOURCES))

all: $(GENERATED) $(TARGETS)

LIBS = $(BUILD_DIR)/lib/LLVMSupport.lib

#
# External libraries needed:
#
EX_LIBS = shell32.lib advapi32.lib ole32.lib

$(BUILD_DIR)/bin/llvm-config.exe: $(OBJECTS) $(LIBS) $(OBJ_DIR)/llvm-config.res
	$(call link_EXE, $@, $^ $(EX_LIBS))

$(OBJ_DIR)/llvm-config.rc: $(MDEPEND)
	$(call make_rc, $@, llvm-config.exe, VFT_APP, Get various configuration information needed to compile programs using LLVM.)

BuildVariables.inc: $(THIS_FILE) $(TOP_DIR)/Common.Windows
	$(call Generating, $@, //)
	$(file >> $@,$(BuildVariables_INC))

llvm-build_ARGS = --native-target "x86" \
                  --enable-targets "AArch64;AMDGPU;ARM;BPF;Hexagon;Lanai;Mips;MSP430;NVPTX;PowerPC;Sparc;SystemZ;WebAssembly;X86;XCore" \
                  --write-library-table ./tmp/LibraryDependencies.tmp \
                # --write-cmake-fragment ./tmp/LLVMBuild.cmake

LibraryDependencies.inc: ../../utils/llvm-build/llvm-build ../../utils/llvm-build/llvmbuild/*.py $(THIS_FILE)
	$(call Generating, $@, //)
	- mkdir ./tmp
	$(PYTHON) $< $(llvm-build_ARGS)
	cat ./tmp/LibraryDependencies.tmp >> $@
	rm -f ./tmp/LibraryDependencies.tmp
	rmdir ./tmp

ifeq ($(USE_ZLIB),1)
  LLVM_SYSTEM_LIBS = "zlib.lib"
endif

LLVM_SYSTEM_LIBS += "psapi.lib shell32.lib ole32.lib uuid.lib advapi32.lib"

define BuildVariables_INC
  #define LLVM_SRC_ROOT           "$(realpath $(TOP_DIR))"
  #define LLVM_OBJ_ROOT           "$(realpath $(BUILD_DIR))"
  #define LLVM_TOOLS_INSTALL_DIR  "bin"
  #define LLVM_CPPFLAGS           "$(CFLAGS) -E"
  #define LLVM_CXXFLAGS           "$(CFLAGS) -Tc"
  #define LLVM_CFLAGS             "$(CFLAGS)"
  #define LLVM_LDFLAGS            "$(LDFLAGS)"

  #if ($(USE_CRT_DEBUG) == 1)
    #define LLVM_BUILDMODE        "Debug"
  #else
    #define LLVM_BUILDMODE        "Release"
  #endif

  #define LLVM_LIBDIR_SUFFIX      ""
  #define LLVM_TARGETS_BUILT      "AArch64 AMDGPU ARM BPF Hexagon Lanai Mips MSP430 NVPTX PowerPC Sparc SystemZ WebAssembly X86 XCore"
  #define LLVM_SYSTEM_LIBS        $(LLVM_SYSTEM_LIBS)
  #define LLVM_BUILD_SYSTEM       "GNU-make"
  #define LLVM_HAS_RTTI           0
  #define LLVM_ENABLE_DYLIB       0
  #define LLVM_LINK_DYLIB         0
  #define LLVM_ENABLE_SHARED      0
  #define LLVM_DYLIB_COMPONENTS   "all"
  #define LLVM_DYLIB_VERSION      "$(VER_MAJOR)"
  #define LLVM_HAS_GLOBAL_ISEL    1
endef

-include .depend.Windows

