#
# GNU Makefile for LLVM 'tools/Clang/lib/Lex'.
#
TOP_DIR = ../../../..
TARGETS = $(BUILD_DIR)/lib/clangLex.lib

include $(TOP_DIR)/Common.Windows

CLANG_INC = $(TOP_DIR)/tools/Clang/include/clang

#
# .inc-files needed here:
#
INC_FILES = $(CLANG_INC)/Basic/DiagnosticCommonKinds.inc \
            $(CLANG_INC)/Basic/DiagnosticLexKinds.inc

LIB_SRC = DependencyDirectivesSourceMinimizer.cpp \
          HeaderMap.cpp                           \
          HeaderSearch.cpp                        \
          Lexer.cpp                               \
          LiteralSupport.cpp                      \
          MacroArgs.cpp                           \
          MacroInfo.cpp                           \
          ModuleMap.cpp                           \
          PPCaching.cpp                           \
          PPCallbacks.cpp                         \
          PPConditionalDirectiveRecord.cpp        \
          PPDirectives.cpp                        \
          PPExpressions.cpp                       \
          PPLexerChange.cpp                       \
          PPMacroExpansion.cpp                    \
          Pragma.cpp                              \
          PreprocessingRecord.cpp                 \
          Preprocessor.cpp                        \
          PreprocessorLexer.cpp                   \
          ScratchBuffer.cpp                       \
          TokenConcatenation.cpp                  \
          TokenLexer.cpp

ALL_SOURCES = $(LIB_SRC)

LIB_OBJ = $(call cpp_to_obj, $(LIB_SRC))

all: $(GENERATED) $(INC_FILES) $(TARGETS)

ifeq ($(USE_MP_COMPILE),1)
$(LIB_OBJ): $(LIB_SRC)
	$(call MP_compile, $(LIB_SRC))
endif

$(BUILD_DIR)/lib/clangLex.lib: $(LIB_OBJ)
	 $(call create_lib, $@, $^)

$(INC_FILES):
	$(call do_make, $(CLANG_INC), all)

-include .depend.Windows

