#
# GNU Makefile for LLVM 'tools/Clang/lib/AST'.
#
TOP_DIR = ../../../..
TARGETS = $(BUILD_DIR)/lib/clangAST.lib

CLANG_INC = $(TOP_DIR)/tools/Clang/include/clang

#
# .inc-files needed here:
#
INC_FILES = $(CLANG_INC)/AST/Attrs.inc                     \
            $(CLANG_INC)/AST/AttrNodeTraverse.inc          \
            $(CLANG_INC)/AST/AttrTextNodeDump.inc          \
            $(CLANG_INC)/AST/AttrVisitor.inc               \
            $(CLANG_INC)/AST/DeclNodes.inc                 \
            $(CLANG_INC)/AST/StmtNodes.inc                 \
            $(CLANG_INC)/AST/CommentCommandList.inc        \
            $(CLANG_INC)/Basic/AttrList.inc                \
            $(CLANG_INC)/Basic/DiagnosticASTKinds.inc      \
            $(CLANG_INC)/Basic/DiagnosticCommentKinds.inc  \
            $(CLANG_INC)/Basic/DiagnosticFrontendKinds.inc \
            $(CLANG_INC)/Basic/DiagnosticGroups.inc        \
            $(CLANG_INC)/Basic/DiagnosticSemaKinds.inc     \
            $(CLANG_INC)/Basic/Version.inc

include $(TOP_DIR)/Common.Windows

LIB_SRC = APValue.cpp                  \
          ASTConsumer.cpp              \
          ASTContext.cpp               \
          ASTDiagnostic.cpp            \
          ASTDumper.cpp                \
          ASTImporter.cpp              \
          ASTImporterLookupTable.cpp   \
          ASTStructuralEquivalence.cpp \
          ASTTypeTraits.cpp            \
          AttrImpl.cpp                 \
          CXXInheritance.cpp           \
          Comment.cpp                  \
          CommentBriefParser.cpp       \
          CommentCommandTraits.cpp     \
          CommentLexer.cpp             \
          CommentParser.cpp            \
          CommentSema.cpp              \
          ComparisonCategories.cpp     \
          DataCollection.cpp           \
          Decl.cpp                     \
          DeclarationName.cpp          \
          DeclBase.cpp                 \
          DeclCXX.cpp                  \
          DeclFriend.cpp               \
          DeclGroup.cpp                \
          DeclObjC.cpp                 \
          DeclOpenMP.cpp               \
          DeclPrinter.cpp              \
          DeclTemplate.cpp             \
          Expr.cpp                     \
          ExprClassification.cpp       \
          ExprConstant.cpp             \
          ExprCXX.cpp                  \
          ExprObjC.cpp                 \
          ExternalASTMerger.cpp        \
          ExternalASTSource.cpp        \
          FormatString.cpp             \
          InheritViz.cpp               \
          ItaniumCXXABI.cpp            \
          ItaniumMangle.cpp            \
          JSONNodeDumper.cpp           \
          Mangle.cpp                   \
          MicrosoftCXXABI.cpp          \
          MicrosoftMangle.cpp          \
          NestedNameSpecifier.cpp      \
          NSAPI.cpp                    \
          ODRHash.cpp                  \
          OSLog.cpp                    \
          OpenMPClause.cpp             \
          ParentMap.cpp                \
          PrintfFormatString.cpp       \
          QualTypeNames.cpp            \
          RawCommentList.cpp           \
          RecordLayout.cpp             \
          RecordLayoutBuilder.cpp      \
          ScanfFormatString.cpp        \
          SelectorLocationsKind.cpp    \
          Stmt.cpp                     \
          StmtCXX.cpp                  \
          StmtIterator.cpp             \
          StmtObjC.cpp                 \
          StmtOpenMP.cpp               \
          StmtPrinter.cpp              \
          StmtProfile.cpp              \
          StmtViz.cpp                  \
          TemplateBase.cpp             \
          TemplateName.cpp             \
          TextNodeDumper.cpp           \
          Type.cpp                     \
          TypeLoc.cpp                  \
          TypePrinter.cpp              \
          VTableBuilder.cpp            \
          VTTBuilder.cpp

ALL_SOURCES = $(LIB_SRC)

LIB_OBJ = $(call cpp_to_obj, $(LIB_SRC))

all: $(GENERATED) $(INC_FILES) $(TARGETS)

ifeq ($(USE_MP_COMPILE),1)
$(LIB_OBJ): $(LIB_SRC)
	$(call MP_compile, $(LIB_SRC))
endif

$(BUILD_DIR)/lib/clangAST.lib: $(LIB_OBJ)
	 $(call create_lib, $@, $^)

$(INC_FILES):
	$(call do_make, $(CLANG_INC), all)

-include .depend.Windows

